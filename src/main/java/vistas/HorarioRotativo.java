/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import controladores.Controlador;
import controladores.HorarioControlador;
import entidades.Horario;
import entidades.Jornada;
import vistas.modelos.MTHorario;
import com.personal.utiles.FormularioUtil;
import com.personal.utiles.ReporteUtil;
import entidades.AsignacionHorario;
import entidades.GrupoHorario;
import entidades.Turno;
import entidades.escalafon.Departamento;
import entidades.escalafon.Empleado;
import java.io.File;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.text.DateFormatter;
import org.jdesktop.observablecollections.ObservableCollections;
import principal.Main;
import utiles.UsuarioActivo;
import vistas.dialogos.DlgAsignarHorario;
import vistas.dialogos.DlgEmpleado;
import vistas.dialogos.DlgOficina;
import vistas.dialogos.DlgTurno;
import vistas.modelos.MCFiltro;
import vistas.modelos.MCFiltro.TipoFiltro;
import vistas.modelos.MTAsignacionHorarioHR;
import vistas.modelos.MTDetalleHorarioHR;
import vistas.renders.RenderFiltro;

/**
 *
 * @author fesquivelc
 */
public class HorarioRotativo extends javax.swing.JInternalFrame {

    /**
     * Creates new form CRUDJornada
     */
    private int accion;
    private final HorarioControlador horarioControlador;
    private List<Horario> horarioList;
    private Jornada jornadaSeleccionada;

    public HorarioRotativo() {
        initComponents();
        horarioControlador = new HorarioControlador();
        bindeoSalvaje();
        accion = 0;
//        FormularioUtil.modeloSpinnerFechaHora(spFechaInicio, "dd/MM/yyyy");
//        FormularioUtil.modeloSpinnerFechaHora(spFechaFin, "dd/MM/yyyy");
        this.controles(accion);
        this.tblDetalleHorario.setHorizontalScrollEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        grpOpcion = new javax.swing.ButtonGroup();
        pnlListado = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHorario = new org.jdesktop.swingx.JXTable();
        pnlDatos = new javax.swing.JPanel();
        pnlDatosHorario = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtDocumento = new javax.swing.JTextField();
        pnlDetalle = new javax.swing.JPanel();
        pnlAsignadoA = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAsignacion = new org.jdesktop.swingx.JXTable();
        pnlAccionAsignado = new javax.swing.JPanel();
        btnAsignar = new javax.swing.JButton();
        btnAsignar1 = new javax.swing.JButton();
        pnlJornadas = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblDetalleHorario = new org.jdesktop.swingx.JXTable();
        pnlAccionAsignado1 = new javax.swing.JPanel();
        btnAsignar2 = new javax.swing.JButton();
        btnAsignar3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        pnlBotones = new javax.swing.JPanel();
        btnGuardar = new javax.swing.JButton();
        btnCncelar = new javax.swing.JButton();
        onlBusqueda = new javax.swing.JPanel();
        chkFiltrar = new javax.swing.JCheckBox();
        cboTipoFiltro = new javax.swing.JComboBox();
        txtBusqueda = new javax.swing.JTextField();
        btnDialogo = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Mantenimiento Horario");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        pnlListado.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Horarios", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 0, 12))); // NOI18N
        java.awt.GridBagLayout pnlListadoLayout = new java.awt.GridBagLayout();
        pnlListadoLayout.columnWidths = new int[] {0};
        pnlListadoLayout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0};
        pnlListado.setLayout(pnlListadoLayout);

        jPanel4.setLayout(new java.awt.GridLayout(1, 0, 10, 0));

        btnNuevo.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        jPanel4.add(btnNuevo);

        btnModificar.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        jPanel4.add(btnModificar);

        btnEliminar.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel4.add(btnEliminar);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        pnlListado.add(jPanel4, gridBagConstraints);

        tblHorario.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        tblHorario.setRowHeight(25);
        tblHorario.getTableHeader().setReorderingAllowed(false);
        tblHorario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblHorarioMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblHorario);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        pnlListado.add(jScrollPane1, gridBagConstraints);

        pnlDatos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos de horario", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 0, 12))); // NOI18N
        pnlDatos.setLayout(new java.awt.GridBagLayout());

        java.awt.GridBagLayout jPanel1Layout = new java.awt.GridBagLayout();
        jPanel1Layout.columnWidths = new int[] {0, 5, 0, 5, 0};
        jPanel1Layout.rowHeights = new int[] {0, 5, 0, 5, 0, 5, 0, 5, 0};
        pnlDatosHorario.setLayout(jPanel1Layout);

        jLabel9.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel9.setText("CÃ³digo:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        pnlDatosHorario.add(jLabel9, gridBagConstraints);

        jLabel10.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel10.setText("Nombre:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        pnlDatosHorario.add(jLabel10, gridBagConstraints);

        txtCodigo.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        pnlDatosHorario.add(txtCodigo, gridBagConstraints);

        txtNombre.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        pnlDatosHorario.add(txtNombre, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridLayout(0, 1, 5, 5));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        pnlDatosHorario.add(jPanel3, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel2.setText("Documento de creaciÃ³n:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        pnlDatosHorario.add(jLabel2, gridBagConstraints);

        txtDocumento.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        pnlDatosHorario.add(txtDocumento, gridBagConstraints);

        pnlDetalle.setLayout(new java.awt.GridBagLayout());

        pnlAsignadoA.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Asignado a", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 0, 12))); // NOI18N
        pnlAsignadoA.setLayout(new java.awt.GridBagLayout());

        tblAsignacion.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        tblAsignacion.setRowHeight(25);
        tblAsignacion.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tblAsignacion);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        pnlAsignadoA.add(jScrollPane2, gridBagConstraints);

        btnAsignar.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        btnAsignar.setText("Asignar a un empleado o grupo");
        btnAsignar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAsignarActionPerformed(evt);
            }
        });
        pnlAccionAsignado.add(btnAsignar);

        btnAsignar1.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        btnAsignar1.setText("Eliminar asignaciÃ³n");
        btnAsignar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAsignar1ActionPerformed(evt);
            }
        });
        pnlAccionAsignado.add(btnAsignar1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        pnlAsignadoA.add(pnlAccionAsignado, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        pnlDetalle.add(pnlAsignadoA, gridBagConstraints);

        pnlJornadas.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Detalle del horario", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 0, 12))); // NOI18N
        pnlJornadas.setLayout(new java.awt.GridBagLayout());

        tblDetalleHorario.setFont(new java.awt.Font("SansSerif", 0, 12)); // NOI18N
        tblDetalleHorario.setRowHeight(25);
        tblDetalleHorario.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(tblDetalleHorario);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        pnlJornadas.add(jScrollPane3, gridBagConstraints);

        btnAsignar2.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        btnAsignar2.setText("Agregar detalles");
        btnAsignar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAsignar2ActionPerformed(evt);
            }
        });
        pnlAccionAsignado1.add(btnAsignar2);

        btnAsignar3.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        btnAsignar3.setText("Eliminar detalles");
        btnAsignar3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAsignar3ActionPerformed(evt);
            }
        });
        pnlAccionAsignado1.add(btnAsignar3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        pnlJornadas.add(pnlAccionAsignado1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        pnlDetalle.add(pnlJornadas, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        pnlDatosHorario.add(pnlDetalle, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 906;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.1;
        pnlDatos.add(pnlDatosHorario, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridLayout(1, 0, 10, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 18, 0);
        pnlDatos.add(jPanel2, gridBagConstraints);

        btnGuardar.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        btnGuardar.setText("GUARDAR");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        pnlBotones.add(btnGuardar);

        btnCncelar.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        btnCncelar.setText("CANCELAR");
        btnCncelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCncelarActionPerformed(evt);
            }
        });
        pnlBotones.add(btnCncelar);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        pnlDatos.add(pnlBotones, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 0.1;
        pnlListado.add(pnlDatos, gridBagConstraints);

        java.awt.GridBagLayout onlBusquedaLayout = new java.awt.GridBagLayout();
        onlBusquedaLayout.columnWidths = new int[] {0, 7, 0, 7, 0, 7, 0, 7, 0};
        onlBusquedaLayout.rowHeights = new int[] {0};
        onlBusqueda.setLayout(onlBusquedaLayout);

        chkFiltrar.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        chkFiltrar.setText("Filtrar por:");
        chkFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFiltrarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        onlBusqueda.add(chkFiltrar, gridBagConstraints);

        cboTipoFiltro.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        cboTipoFiltro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboTipoFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTipoFiltroActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        onlBusqueda.add(cboTipoFiltro, gridBagConstraints);

        txtBusqueda.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.1;
        onlBusqueda.add(txtBusqueda, gridBagConstraints);

        btnDialogo.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        btnDialogo.setText("...");
        btnDialogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDialogoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        onlBusqueda.add(btnDialogo, gridBagConstraints);

        jButton2.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jButton2.setText("Mostrar horarios asignados");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 8;
        gridBagConstraints.gridy = 0;
        onlBusqueda.add(jButton2, gridBagConstraints);

        jButton4.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jButton4.setText("Imprimir horarios asignados");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        onlBusqueda.add(jButton4, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 0.1;
        pnlListado.add(onlBusqueda, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 310;
        gridBagConstraints.ipady = 430;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.weighty = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(12, 12, 12, 0);
        getContentPane().add(pnlListado, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // TODO add your handling code here:
        this.accion = Controlador.NUEVO;
        horarioControlador.prepararCrear();
        this.controles(accion);
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        // TODO add your handling code here:
        int fila = this.tblHorario.getSelectedRow();
        if (fila != -1) {
            this.accion = Controlador.MODIFICAR;
            this.horarioControlador.setSeleccionado(this.horarioList.get(fila));
            this.mostrar(horarioControlador.getSeleccionado());
            this.controles(accion);
            FormularioUtil.activarComponente(txtCodigo, false);
        }

    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        this.accion = Controlador.ELIMINAR;
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void tblHorarioMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHorarioMouseReleased
        // TODO add your handling code here:
        int fila = tblHorario.getSelectedRow();
        if (fila != -1) {
            this.horarioSeleccionado = horarioList.get(fila);
            mostrar(this.horarioSeleccionado);
        }

    }//GEN-LAST:event_tblHorarioMouseReleased

    private void chkFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFiltrarActionPerformed
        // TODO add your handling code here:
        checkFiltro();
    }//GEN-LAST:event_chkFiltrarActionPerformed

    private void btnDialogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDialogoActionPerformed
        // TODO add your handling code here:
        TipoFiltro filtro = (TipoFiltro) mcFiltro.getSelectedItem();
        switch (filtro) {
            case POR_EMPLEADO:
                DlgEmpleado empleados = new DlgEmpleado(this);
                empleadoSeleccionado = empleados.getSeleccionado();
                txtBusqueda.setText(empleadoSeleccionado == null ? "" : empleadoSeleccionado.getNombreCompleto());
                break;
            case POR_OFICINA:
                DlgOficina oficinas = new DlgOficina(this);
                this.departamentoSeleccionado = oficinas.getSeleccionado();
                txtBusqueda.setText(departamentoSeleccionado == null ? "" : departamentoSeleccionado.getNombre());
                break;
            case POR_GRUPO_HORARIO:
                break;
        }
    }//GEN-LAST:event_btnDialogoActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        List<Horario> listado = new ArrayList<>();
        if (chkFiltrar.isSelected()) {
            TipoFiltro filtro = (TipoFiltro) mcFiltro.getSelectedItem();
            switch (filtro) {
                case POR_EMPLEADO:
                    if(empleadoSeleccionado != null ){
                        listado = horarioControlador.buscarXEmpleado(empleadoSeleccionado);
                    }                    
                    break;
                case POR_OFICINA:
                    if(departamentoSeleccionado != null){
                        listado = horarioControlador.buscarXDepartamento(departamentoSeleccionado);
                    }
                    break;
                case POR_GRUPO_HORARIO:
                    break;
            }
        } else {
            listado = horarioControlador.buscarTodos();
        }
        
        actualizarTabla(listado);

    }//GEN-LAST:event_jButton2ActionPerformed

    private void cboTipoFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTipoFiltroActionPerformed
        // TODO add your handling code here:
        txtBusqueda.setText("");
        this.empleadoSeleccionado = null;
        this.departamentoSeleccionado = null;
        this.grupoHorarioSeleccionado = null;
    }//GEN-LAST:event_cboTipoFiltroActionPerformed

    private void btnAsignar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAsignar2ActionPerformed
        // TODO add your handling code here:
        DlgTurno turnos = new DlgTurno(this);
        Turno turno = turnos.getSeleccionado();
        if(turno != null){
            turno.setHorario(this.horarioSeleccionado);
            turno.setHorario(this.horarioControlador.getSeleccionado());
            this.detalleHorarioList.add(turno);
            this.horarioControlador.getSeleccionado().getTurnoList().add(turno);
            
        }
    }//GEN-LAST:event_btnAsignar2ActionPerformed

    private void btnAsignarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAsignarActionPerformed
        // TODO add your handling code here:
//        DlgAsignacionHorario empleadoGrupo = new DlgAsignacionHorario(this);
        DlgAsignarHorario asignar = new DlgAsignarHorario(this, true);
        AsignacionHorario asignacion = asignar.getSeleccion();
        if(asignacion != null){
            asignacion.setHorario(this.horarioControlador.getSeleccionado());
            this.horarioControlador.getSeleccionado().getAsignacionHorarioList().add(asignacion);
            this.asignacionHorarioList.add(asignacion);
        }
    }//GEN-LAST:event_btnAsignarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        if(FormularioUtil.dialogoConfirmar(this, accion)){
            Horario horario = this.horarioControlador.getSeleccionado();
            horario.setCodigo(this.txtCodigo.getText());
            horario.setDocumento(this.txtDocumento.getText());
            horario.setNombre(this.txtNombre.getText());
            
            
            if(this.horarioControlador.accion(accion)){
                FormularioUtil.mensajeExito(this, accion);
                this.accion = 0;
                this.controles(accion);
                this.actualizarTabla();
            }
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnAsignar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAsignar1ActionPerformed
        // TODO add your handling code here:
        int fila = tblAsignacion.getSelectedRow();
        if(fila != -1){
            AsignacionHorario asignacion = this.asignacionHorarioList.get(fila);
            this.horarioControlador.getSeleccionado().getAsignacionHorarioList().remove(asignacion);
            this.asignacionHorarioList.remove(asignacion);
        }
    }//GEN-LAST:event_btnAsignar1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String rutaReporte = "reportes/reporte_horario.jasper";
        Map parametros = new HashMap();
        parametros.put("reporte_usuario", UsuarioActivo.getUsuario().getLogin());
        parametros.put("reporte_institucion", Main.REPORTE_INSTITUCION);
        File fileReporte = new File(rutaReporte);
        ReporteUtil rp = new ReporteUtil();
        rp.setConn(horarioControlador.getDao().getConexion());
        rp.generarReporte(fileReporte, parametros, JOptionPane.getRootFrame());
    }//GEN-LAST:event_jButton4ActionPerformed

    private void btnCncelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCncelarActionPerformed
        // TODO add your handling code here:
//        FormularioUtil.activarComponente(pnlAsignadoA, false);
//        FormularioUtil.activarComponente(pnlJornadas, false);
//        FormularioUtil.activarComponente(txtCodigo, false);
//        FormularioUtil.activarComponente(txtNombre, false);
//        FormularioUtil.activarComponente(txtDocumento, false);
        
//        FormularioUtil.activarComponente(this.tblAsignacion, true);
        
        FormularioUtil.activarComponente(this.pnlListado, true);
        
        FormularioUtil.activarComponente(btnGuardar, false);
        FormularioUtil.activarComponente(btnCncelar, false);
        
        
        FormularioUtil.activarComponente(this.pnlDatosHorario, false);
        
        FormularioUtil.limpiarComponente(pnlDatosHorario);
        
//        FormularioUtil.activarComponente(this.tblHorario, true);
//        FormularioUtil.activarComponente(this.txtBusqueda, true);
        detalleHorarioList.clear();
        asignacionHorarioList.clear();
    }//GEN-LAST:event_btnCncelarActionPerformed

    private void btnAsignar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAsignar3ActionPerformed
        // TODO add your handling code here:
        int fila;
        if((fila = tblDetalleHorario.getSelectedRow()) != -1){
            Turno detalle = this.detalleHorarioList.get(fila);
            this.detalleHorarioList.remove(detalle);
            this.horarioControlador.getSeleccionado().getTurnoList().remove(detalle);
        }
    }//GEN-LAST:event_btnAsignar3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAsignar;
    private javax.swing.JButton btnAsignar1;
    private javax.swing.JButton btnAsignar2;
    private javax.swing.JButton btnAsignar3;
    private javax.swing.JButton btnCncelar;
    private javax.swing.JButton btnDialogo;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JComboBox cboTipoFiltro;
    private javax.swing.JCheckBox chkFiltrar;
    private javax.swing.ButtonGroup grpOpcion;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel onlBusqueda;
    private javax.swing.JPanel pnlAccionAsignado;
    private javax.swing.JPanel pnlAccionAsignado1;
    private javax.swing.JPanel pnlAsignadoA;
    private javax.swing.JPanel pnlBotones;
    private javax.swing.JPanel pnlDatos;
    private javax.swing.JPanel pnlDatosHorario;
    private javax.swing.JPanel pnlDetalle;
    private javax.swing.JPanel pnlJornadas;
    private javax.swing.JPanel pnlListado;
    private org.jdesktop.swingx.JXTable tblAsignacion;
    private org.jdesktop.swingx.JXTable tblDetalleHorario;
    private org.jdesktop.swingx.JXTable tblHorario;
    private javax.swing.JTextField txtBusqueda;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtDocumento;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables

    private Empleado empleadoSeleccionado;
    private Departamento departamentoSeleccionado;
    private GrupoHorario grupoHorarioSeleccionado;
    private Horario horarioSeleccionado;

    private void modeloHoraSpinner(JSpinner spinner) {
        JSpinner.DateEditor editor = new JSpinner.DateEditor(spinner, "HH:mm");
        DateFormatter formatter = (DateFormatter) editor.getTextField().getFormatter();
        formatter.setAllowsInvalid(false); // this makes what you want
        formatter.setOverwriteMode(true);
        spinner.setEditor(editor);
        Calendar cal = Calendar.getInstance();
        cal.set(Calendar.HOUR, 7);
        cal.set(Calendar.MINUTE, 30);
        cal.set(Calendar.SECOND, 0);
        cal.set(Calendar.AM_PM, Calendar.AM);
        spinner.setValue(cal.getTime());
    }

    private void modeloFechaSpinner(JSpinner spinner) {
        JSpinner.DateEditor editor = new JSpinner.DateEditor(spinner, "dd/MM/yyyy");
        DateFormatter formatter = (DateFormatter) editor.getTextField().getFormatter();
        formatter.setAllowsInvalid(false); // this makes what you want
        formatter.setOverwriteMode(true);
        spinner.setEditor(editor);
    }

    private void controles(int accion) {
        boolean bandera = accion == Controlador.NUEVO || accion == Controlador.MODIFICAR;

        FormularioUtil.activarComponente(this.pnlListado, !bandera);
        FormularioUtil.activarComponente(this.pnlDatos, bandera);
        FormularioUtil.activarComponente(this.tblAsignacion, true);
        FormularioUtil.activarComponente(this.tblDetalleHorario, true);
        FormularioUtil.activarComponente(this.txtBusqueda, false);
        if(accion == Controlador.NUEVO){
            asignacionHorarioList.clear();
            detalleHorarioList.clear();
        }

        if (accion != Controlador.MODIFICAR) {
            FormularioUtil.limpiarComponente(this.pnlDatos);
        }

        checkFiltro();

    }

    private List<AsignacionHorario> asignacionHorarioList;
    private List<Turno> detalleHorarioList;
    private MCFiltro mcFiltro;

    private void bindeoSalvaje() {
        horarioList = new ArrayList<>();
        asignacionHorarioList = ObservableCollections.observableList(new ArrayList<AsignacionHorario>());
        detalleHorarioList = ObservableCollections.observableList(new ArrayList<Turno>());
        horarioList = ObservableCollections.observableList(horarioList);

        mcFiltro = new MCFiltro();
        cboTipoFiltro.setModel(mcFiltro);
        cboTipoFiltro.setRenderer(new RenderFiltro());

        String[] columnas = {"Codigo", "Horario", ""};

        MTHorario mt = new MTHorario(horarioList, columnas);
        MTDetalleHorarioHR mtdh = new MTDetalleHorarioHR(detalleHorarioList);
        MTAsignacionHorarioHR mtah = new MTAsignacionHorarioHR(asignacionHorarioList);
        tblHorario.setModel(mt);
        tblAsignacion.setModel(mtah);
        tblDetalleHorario.setModel(mtdh);

        actualizarTabla();
    }

    private void mostrar(Horario seleccionado) {
        txtDocumento.setText(seleccionado.getDocumento());
        txtCodigo.setText(seleccionado.getCodigo());
        txtNombre.setText(seleccionado.getNombre());

        this.asignacionHorarioList.clear();
        this.asignacionHorarioList.addAll(seleccionado.getAsignacionHorarioList());
        this.tblAsignacion.packAll();

        this.detalleHorarioList.clear();
        this.detalleHorarioList.addAll(seleccionado.getTurnoList());
        this.tblDetalleHorario.packAll();

//        spFechaFin.setValue(seleccionado.getFechaFin());
    }

    private void actualizarTabla() {
        horarioList.clear();        
        horarioList.addAll(horarioControlador.buscarTodos());
        tblHorario.packAll();
    }
    private void actualizarTabla(List<Horario> horarios) {
        horarioList.clear();
        this.asignacionHorarioList.clear();
        this.detalleHorarioList.clear();
        horarioList.addAll(horarios);
        tblHorario.packAll();
    }

    private void checkFiltro() {
        FormularioUtil.activarComponente(cboTipoFiltro, chkFiltrar.isSelected());
        FormularioUtil.activarComponente(btnDialogo, chkFiltrar.isSelected());
    }
}
